import java.nio.file.*

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "cz.kubacki.gradle.plugins:gradle-nbm-plugin:1.15.0"
    }
}

apply plugin: 'java'
apply plugin: "cz.kubacki.nbm"

String netbeansVersion = 'RELEASE81'

repositories {
    mavenCentral()
    maven { url 'http://bits.netbeans.org/nexus/content/groups/netbeans' }
    maven { url 'http://bits.netbeans.org/maven2/' }
    maven { url 'http://repo.gradle.org/gradle/libs-releases-local' }
    maven { url 'http://dl.bintray.com/kelemen/maven' }
}

def tryGetProperty = { String name, String defaultValue ->
    if (!project.hasProperty(name)) {
        return defaultValue
    }

    return project.property(name)?.toString()
}

nbm {
    moduleAuthor = 'Ed Hillmann'
    licenseFile = 'license.txt'
    moduleName = 'org.netbeans.gradle.javaee.project'
    localizingBundle = 'org/netbeans/gradle/javaee/plugin/Bundle.properties'

    requires 'cnb.org.netbeans.gradle.project'

    keyStore {
        keyStoreFile = tryGetProperty('nbGradlePluginKeyStore', null)
        username = tryGetProperty('nbGradlePluginKeyStoreUser', '')
        password = tryGetProperty('nbGradlePluginKeyStorePass', '')
    }

    friendPackages {
        add 'org.netbeans.gradle.javaee.jpa'
        add 'org.netbeans.gradle.javaee.web'
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

configurations {
    pluginInstall
}

dependencies {
    compile project(':netbeans-gradle-javaee-models')

    providedCompile 'org.netbeans.api:org-netbeans-modules-projectapi:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-api-annotations-common:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-java-project:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-api-java-classpath:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-api-web-webmodule:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-j2ee-core:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-j2ee-dd:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-j2ee-metadata:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-modules:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-util:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-util-lookup:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-filesystems:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-loaders:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-openide-nodes:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-nbjunit:' + netbeansVersion
    providedCompile 'org.netbeans.api:org-netbeans-modules-j2eeserver:' + netbeansVersion

    providedCompile 'org.netbeans.modules:org-netbeans-modules-web-beans:' + netbeansVersion
    providedCompile 'org.netbeans.modules:org-netbeans-modules-j2ee-persistenceapi:' + netbeansVersion
    providedCompile 'org.netbeans.modules:org-netbeans-modules-projectapi-nb:' + netbeansVersion

    providedCompile "com.github.kelemen:netbeans-gradle-plugin:${nbGradleVersion}"

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'

    // dev-feature: For installation of plugins required by this plugin
    // groovy-plugin is not listed here; assumed that full NB version with groovy-support is installed by dev
    pluginInstall "com.github.kelemen:netbeans-gradle-plugin:${nbGradleVersion}@nbm"
}

task extractPlugins << {
  def nbms = project.configurations.pluginInstall.findAll {it.name.endsWith(".nbm") }
  println nbms
  nbms.each { nbm ->
      def sourceFile = file(nbm)
      def outputDir = file("${buildDir}/tmp/plugins")
      copy {
        from zipTree(sourceFile)
        into outputDir
      }
  }
}

task installPlugins(type: Copy, dependsOn: extractPlugins) {
    from "${buildDir}/tmp/plugins/netbeans"
    into "${buildDir}/module"
}

run.dependsOn installPlugins
